---
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import GlassCard from '../components/GlassCard.astro';
import Button from '../components/Button.astro';
import PostCard from '../components/PostCard.astro';

// Temporarily disabled for build issues
// const allHanhTrinh = await getCollection('hanhtrinh');
// const allThucHanh = await getCollection('thuchanh');
const allHanhTrinh: any[] = [];
const allThucHanh: any[] = [];

// Filter published posts and sort by date
const publishedHanhTrinh = allHanhTrinh
  .filter(post => !post.data?.draft)
  .sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime());

const publishedThucHanh = allThucHanh
  .filter(post => !post.data?.draft)
  .sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime());

// Get featured and latest posts
const featuredPosts = [...publishedHanhTrinh, ...publishedThucHanh]
  .filter(post => post.data.featured)
  .slice(0, 1);

const latestPosts = [...publishedHanhTrinh, ...publishedThucHanh]
  .sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime())
  .slice(0, 3);

// Statistics
const stats = {
  totalJourneyPosts: publishedHanhTrinh.length,
  totalPracticePosts: publishedThucHanh.length,
  totalDistance: publishedHanhTrinh.reduce((sum, post) => sum + (post.data.distance || 0), 0),
  daysOnJourney: publishedHanhTrinh.length > 0 ? 
    Math.ceil((new Date().getTime() - publishedHanhTrinh[publishedHanhTrinh.length - 1].data.pubDate.getTime()) / (1000 * 60 * 60 * 24)) : 0
};
---

<BaseLayout 
  title="Bộ Hành Tỉnh Thức"
  description="Hành trình bộ hành xuyên Việt Nam để thực hành sống tỉnh thức, nuôi dưỡng lòng yêu thương, và tìm về niềm vui giản dị trong từng bước chân."
>
  <Header slot="header" />

  <!-- Hero Section -->
  <section class="relative min-h-screen flex items-center justify-center overflow-hidden">
    <!-- Background with parallax effect -->
    <div class="absolute inset-0 z-0">
      <div 
        class="absolute inset-0 bg-cover bg-center bg-fixed transform scale-105"
        
      ></div>
      <div class="absolute inset-0 bg-gradient-to-b from-gray-900/60 via-gray-900/40 to-gray-900/80"></div>
    </div>

    <!-- Floating elements for visual interest -->
    <div class="absolute inset-0 overflow-hidden pointer-events-none">
      <div class="absolute top-20 left-10 w-2 h-2 bg-accent-color rounded-full animate-float opacity-60"></div>
      <div class="absolute top-40 right-20 w-3 h-3 bg-accent-color/40 rounded-full animate-float animation-delay-1000 opacity-40"></div>
      <div class="absolute bottom-32 left-1/4 w-1 h-1 bg-accent-color rounded-full animate-float animation-delay-2000 opacity-80"></div>
    </div>

    <!-- Hero Content -->
    <div class="relative z-10 max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
      
      <!-- Main Heading -->
      <div class="mb-8 animate-in animate-delay-100">
        <h1 class="text-4xl md:text-6xl lg:text-7xl font-bold text-text-primary mb-6 leading-tight">
          <span class="block text-gradient">Mỗi bước chân</span>
          <span class="block">một lần tỉnh thức</span>
        </h1>
        
        <p class="text-xl md:text-2xl text-text-secondary max-w-4xl mx-auto leading-relaxed font-light">
          Hành trình sống <strong class="text-accent-color">tỉnh thức</strong> xuyên Việt Nam, 
          nuôi dưỡng lòng <strong class="text-accent-color">thương yêu</strong>, và tìm về sự bình yên trong lòng.
        </p>
      </div>

      <!-- Journey Stats -->
      <div class="mb-12 animate-in animate-delay-200">
        <GlassCard class="inline-block px-8 py-6">
          <div class="grid grid-cols-2 md:grid-cols-4 gap-6 text-center">
            <div>
              <div class="text-2xl md:text-3xl font-bold text-accent-color">{stats.totalJourneyPosts}</div>
              <div class="text-sm text-text-secondary">Ngày hành trình</div>
            </div>
            <div>
              <div class="text-2xl md:text-3xl font-bold text-accent-color">{stats.totalDistance}km</div>
              <div class="text-sm text-text-secondary">Đã đi được</div>
            </div>
            <div>
              <div class="text-2xl md:text-3xl font-bold text-accent-color">{stats.totalPracticePosts}</div>
              <div class="text-sm text-text-secondary">Bài thực hành</div>
            </div>
            <div>
              <div class="text-2xl md:text-3xl font-bold text-accent-color">∞</div>
              <div class="text-sm text-text-secondary">Yêu thương</div>
            </div>
          </div>
        </GlassCard>
      </div>

      <!-- CTA Buttons -->
      <div class="flex flex-col sm:flex-row items-center justify-center space-y-4 sm:space-y-0 sm:space-x-6 animate-in animate-delay-300">
        <Button
          variant="primary"
          size="lg"
          href="/hanhtrinh"
          icon="arrow"
          iconPosition="right"
          class="text-lg px-8 py-4"
        >
          Bắt đầu hành trình
        </Button>
        
        <Button
          variant="glass"
          size="lg"
          href="/gioithieu"
          class="text-lg px-8 py-4"
        >
          Tìm hiểu thêm
        </Button>
      </div>

      <!-- Scroll indicator -->
      <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce">
        <div class="w-6 h-10 border-2 border-white/30 rounded-full flex justify-center">
          <div class="w-1 h-3 bg-white/50 rounded-full mt-2 animate-pulse"></div>
        </div>
        <p class="text-xs text-white/50 mt-2">Cuộn xuống</p>
      </div>
    </div>
  </section>

  <!-- Featured Post Section -->
  {featuredPosts.length > 0 && (
    <section class="py-16 lg:py-24">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center mb-12">
          <h2 class="text-3xl md:text-4xl font-bold text-text-primary mb-4">
            Nổi bật
          </h2>
          <p class="text-lg text-text-secondary max-w-2xl mx-auto">
            Những khoảnh khắc đặc biệt từ hành trình
          </p>
        </div>
        
        <div class="max-w-4xl mx-auto">
          <PostCard
            title={featuredPosts[0].data.title}
            description={featuredPosts[0].data.description}
            pubDate={featuredPosts[0].data.pubDate}
            author={featuredPosts[0].data.author}
            image={featuredPosts[0].data.image}
            tags={featuredPosts[0].data.tags}
            href={`/${featuredPosts[0].collection}/${featuredPosts[0].slug}`}
            readingTime={featuredPosts[0].data.readingTime ? `${featuredPosts[0].data.readingTime} phút đọc` : undefined}
            featured={true}
            variant="featured"
            class="animate-in animate-delay-100"
          />
        </div>
      </div>
    </section>
  )}

  <!-- Latest Posts Section -->
  <section class="py-16 lg:py-24 bg-gradient-to-b from-transparent to-gray-900/30">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-12">
        <h2 class="text-3xl md:text-4xl font-bold text-text-primary mb-4">
          Mới nhất từ hành trình
        </h2>
        <p class="text-lg text-text-secondary max-w-2xl mx-auto">
          Những chia sẻ và học hỏi mới nhất từ con đường bộ hành
        </p>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {latestPosts.map((post, index) => (
          <div class={`animate-in animate-delay-${(index + 1) * 100}`}>
            <PostCard
              title={post.data.title}
              description={post.data.description}
              pubDate={post.data.pubDate}
              author={post.data.author}
              image={post.data.image}
              tags={post.data.tags}
              href={`/${post.collection}/${post.slug}`}
              readingTime={post.data.readingTime ? `${post.data.readingTime} phút đọc` : undefined}
              variant="default"
            />
          </div>
        ))}
      </div>
      
      <div class="text-center mt-12">
        <Button
          variant="outline"
          size="lg"
          href="/hanhtrinh"
          icon="arrow"
          iconPosition="right"
        >
          Xem tất cả bài viết
        </Button>
      </div>
    </div>
  </section>

  <!-- Philosophy Quote Section -->
  <section class="py-16 lg:py-24">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
      <GlassCard padding="xl" class="text-center animate-in">
        <div class="mb-8">
          <svg class="w-16 h-16 text-accent-color/30 mx-auto mb-6" fill="currentColor" viewBox="0 0 24 24">
            <path d="M14.017 21v-7.391c0-5.704 3.731-9.57 8.983-10.609l.995 2.151c-2.432.917-3.995 3.638-3.995 5.849h4v10h-9.983zm-14.017 0v-7.391c0-5.704 3.748-9.57 9-10.609l.996 2.151c-2.433.917-3.996 3.638-3.996 5.849h4v10h-10z"/>
          </svg>
        </div>
        
        <blockquote class="text-xl md:text-2xl lg:text-3xl font-light text-text-primary mb-8 leading-relaxed italic">
          "Trong sự tĩnh lặng của việc đi bộ, tâm ta tìm về nguồn cội bình yên. 
          Mỗi bước chân nuôi dưỡng yêu thương, mỗi hơi thở mang lại an lành."
        </blockquote>
        
        <cite class="text-accent-color font-medium">— Người Bộ Hành</cite>
        
        <div class="mt-8 pt-8 border-t border-white/10">
          <p class="text-text-secondary max-w-2xl mx-auto">
            Hành trình này không chỉ về việc đi bộ, mà về việc thực hành những giá trị 
            tốt đẹp của cuộc sống - sống tỉnh thức, nuôi dưỡng yêu thương, và tìm về bình yên trong lòng.
          </p>
        </div>
      </GlassCard>
    </div>
  </section>

  <!-- Practice Highlights Section -->
  <section class="py-16 lg:py-24 bg-gradient-to-b from-gray-900/30 to-transparent">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-12">
        <h2 class="text-3xl md:text-4xl font-bold text-text-primary mb-4">
          Thực hành sống đẹp
        </h2>
        <p class="text-lg text-text-secondary max-w-2xl mx-auto">
          Những phương pháp đơn giản giúp nuôi dưỡng tâm hồn và tìm về sự bình yên trong cuộc sống
        </p>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        
        <!-- Practice Card 1 -->
        <GlassCard variant="hover" class="text-center p-8 animate-in animate-delay-100">
          <div class="w-16 h-16 bg-accent-color/20 rounded-full flex items-center justify-center mx-auto mb-6">
            <svg class="w-8 h-8 text-accent-color" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 10l-2 1m0 0l-2-1m2 1v2.5M20 7l-2 1m2-1l-2-1m2 1v2.5M14 4l-2-1-2 1M4 7l2-1M4 7l2 1M4 7v2.5M12 21l-2-1m2 1l2-1m-2 1v-2.5M6 18l-2-1v-2.5M18 18l2-1v-2.5" />
            </svg>
          </div>
          <h3 class="text-xl font-semibold text-text-primary mb-4">Đi bộ tỉnh thức</h3>
          <p class="text-text-secondary mb-6">
            Thực hành đi bộ một cách ý thức, cảm nhận từng bước chân, nuôi dưỡng sự bình yên.
          </p>
          <Button variant="ghost" href="/thuchanh" size="sm">
            Tìm hiểu thêm
          </Button>
        </GlassCard>

        <!-- Practice Card 2 -->
        <GlassCard variant="hover" class="text-center p-8 animate-in animate-delay-200">
          <div class="w-16 h-16 bg-accent-color/20 rounded-full flex items-center justify-center mx-auto mb-6">
            <svg class="w-8 h-8 text-accent-color" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
            </svg>
          </div>
          <h3 class="text-xl font-semibold text-text-primary mb-4">Trái tim yêu thương</h3>
          <p class="text-text-secondary mb-6">
            Phát triển lòng yêu thương với mọi người, bao gồm cả bản thân và những người xung quanh.
          </p>
          <Button variant="ghost" href="/thuchanh" size="sm">
            Tìm hiểu thêm
          </Button>
        </GlassCard>

        <!-- Practice Card 3 -->
        <GlassCard variant="hover" class="text-center p-8 animate-in animate-delay-300">
          <div class="w-16 h-16 bg-accent-color/20 rounded-full flex items-center justify-center mx-auto mb-6">
            <svg class="w-8 h-8 text-accent-color" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z" />
            </svg>
          </div>
          <h3 class="text-xl font-semibold text-text-primary mb-4">Sống đơn giản</h3>
          <p class="text-text-secondary mb-6">
            Thực hành sống tối giản, biết đủ và tìm thấy niềm vui trong những điều giản dị.
          </p>
          <Button variant="ghost" href="/thuchanh" size="sm">
            Tìm hiểu thêm
          </Button>
        </GlassCard>
      </div>
    </div>
  </section>

  <!-- Newsletter Section -->
  <section class="py-16 lg:py-24">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
      <GlassCard padding="xl" class="text-center">
        <div class="mb-8">
          <h2 class="text-2xl md:text-3xl font-bold text-text-primary mb-4">
            Đồng hành cùng hành trình
          </h2>
          <p class="text-lg text-text-secondary max-w-2xl mx-auto">
            Nhận thông báo về những chia sẻ mới từ hành trình và các bài thực hành sống đẹp.
          </p>
        </div>
        
        <div class="flex flex-col sm:flex-row gap-6 justify-center items-center max-w-md mx-auto">
          <Button
            href="https://www.facebook.com/share/g/1CK1VrsB8D/"
            variant="primary"
            size="md"
            class="px-8 py-3 whitespace-nowrap flex items-center gap-2"
            target="_blank"
            rel="noopener noreferrer"
          >
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
              <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
            </svg>
            Facebook Group
          </Button>
          
          <Button
            href="https://discord.gg/FWgScmadrg"
            variant="outline"
            size="md"
            class="px-8 py-3 whitespace-nowrap flex items-center gap-2"
            target="_blank"
            rel="noopener noreferrer"
          >
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
              <path d="M20.317 4.3698a19.7913 19.7913 0 00-4.8851-1.5152.0741.0741 0 00-.0785.0371c-.211.3753-.4447.8648-.6083 1.2495-1.8447-.2762-3.68-.2762-5.4868 0-.1636-.3933-.4058-.8742-.6177-1.2495a.077.077 0 00-.0785-.037 19.7363 19.7363 0 00-4.8852 1.515.0699.0699 0 00-.0321.0277C.5334 9.0458-.319 13.5799.0992 18.0578a.0824.0824 0 00.0312.0561c2.0528 1.5076 4.0413 2.4228 5.9929 3.0294a.0777.0777 0 00.0842-.0276c.4616-.6304.8731-1.2952 1.226-1.9942a.076.076 0 00-.0416-.1057c-.6528-.2476-1.2743-.5495-1.8722-.8923a.077.077 0 01-.0076-.1277c.1258-.0943.2517-.1923.3718-.2914a.0743.0743 0 01.0776-.0105c3.9278 1.7933 8.18 1.7933 12.0614 0a.0739.0739 0 01.0785.0095c.1202.099.246.1981.3728.2924a.077.077 0 01-.0066.1276 12.2986 12.2986 0 01-1.873.8914.0766.0766 0 00-.0407.1067c.3604.698.7719 1.3628 1.225 1.9932a.076.076 0 00.0842.0286c1.961-.6067 3.9495-1.5219 6.0023-3.0294a.077.077 0 00.0313-.0552c.5004-5.177-.8382-9.6739-3.5485-13.6604a.061.061 0 00-.0312-.0286zM8.02 15.3312c-1.1825 0-2.1569-1.0857-2.1569-2.419 0-1.3332.9555-2.4189 2.157-2.4189 1.2108 0 2.1757 1.0952 2.1568 2.419-.0189 1.3332-.9555 2.4189-2.1569 2.4189zm7.9748 0c-1.1825 0-2.1569-1.0857-2.1569-2.419 0-1.3332.9554-2.4189 2.1569-2.4189 1.2108 0 2.1757 1.0952 2.1568 2.419 0 1.3332-.9555 2.4189-2.1568 2.4189Z"/>
            </svg>
            Discord
          </Button>
        </div>
      </GlassCard>
    </div>
  </section>

  <Footer slot="footer" />
</BaseLayout>

<style>
  /* Additional animations for hero section */
  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-20px);
    }
  }
  
  .animate-float {
    animation: float 3s ease-in-out infinite;
  }
  
  .animation-delay-1000 {
    animation-delay: 1s;
  }
  
  .animation-delay-2000 {
    animation-delay: 2s;
  }
  
  /* Parallax effect */
  .bg-fixed {
    background-attachment: fixed;
  }
  
  @media (max-width: 768px) {
    .bg-fixed {
      background-attachment: scroll;
    }
  }
  
  /* Scroll indicator animation */
  @keyframes bounce {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(10px);
    }
  }
  
  .animate-bounce {
    animation: bounce 2s infinite;
  }
  
  /* Text gradient */
  .text-gradient {
    background: linear-gradient(135deg, #34d399, #22c55e, #16a34a);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
  
  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .animate-float,
    .animate-bounce,
    .animate-in {
      animation: none;
    }
    
    .bg-fixed {
      background-attachment: scroll;
    }
  }
</style>

<script>
  // Parallax effect for hero background
  window.addEventListener('scroll', () => {
    const scrolled = window.pageYOffset;
    const parallaxElements = document.querySelectorAll('.bg-fixed');
    
    parallaxElements.forEach(element => {
      const speed = 0.5;
      element.style.transform = `translateY(${scrolled * speed}px)`;
    });
  });

  // Newsletter form handling
  document.addEventListener('DOMContentLoaded', () => {
    const newsletterForm = document.querySelector('form[aria-label="Đăng ký nhận bản tin"]');
    
    if (newsletterForm) {
      newsletterForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const formData = new FormData(newsletterForm);
        const email = formData.get('email');
        const submitButton = newsletterForm.querySelector('button[type="submit"]');
        const originalText = submitButton?.textContent;
        
        if (!email) return;
        
        try {
          // Show loading state
          if (submitButton) {
            submitButton.textContent = 'Đang xử lý...';
            submitButton.disabled = true;
          }
          
          // Simulate API call (replace with actual implementation)
          await new Promise(resolve => setTimeout(resolve, 1000));
          
          // Success feedback
          if (submitButton) {
            submitButton.textContent = 'Đã đăng ký!';
            submitButton.classList.add('bg-green-500');
          }
          
          // Reset form
          newsletterForm.reset();
          
          // Reset button after 3 seconds
          setTimeout(() => {
            if (submitButton && originalText) {
              submitButton.textContent = originalText;
              submitButton.disabled = false;
              submitButton.classList.remove('bg-green-500');
            }
          }, 3000);
          
        } catch (error) {
          console.error('Newsletter signup error:', error);
          
          if (submitButton && originalText) {
            submitButton.textContent = 'Thử lại';
            submitButton.disabled = false;
          }
        }
      });
    }
  });

  // Smooth scrolling for internal links
  document.addEventListener('DOMContentLoaded', () => {
    const links = document.querySelectorAll('a[href^="#"]');
    
    links.forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        
        const targetId = link.getAttribute('href')?.substring(1);
        if (!targetId) return;
        
        const targetElement = document.getElementById(targetId);
        if (targetElement) {
          targetElement.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
          });
        }
      });
    });
  });
</script>
